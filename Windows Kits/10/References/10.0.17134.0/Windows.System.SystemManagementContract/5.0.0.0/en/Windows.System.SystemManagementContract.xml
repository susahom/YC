<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Windows.System.SystemManagementContract</name>
  </assembly>
  <members>
    <member name="T:Windows.Services.Cortana.CortanaSettings">
      <summary>Provides access to Cortana settings.</summary>
    </member>
    <member name="P:Windows.Services.Cortana.CortanaSettings.HasUserConsentToVoiceActivation">
      <summary>Gets whether the user has consented to voice activation.</summary>
      <returns>**true** if the user has consented. Otherwise, **false**.</returns>
    </member>
    <member name="P:Windows.Services.Cortana.CortanaSettings.IsVoiceActivationEnabled">
      <summary>Gets or sets whether voice activation is enabled.</summary>
      <returns>**true** if voice activation is enabled. Otherwise, **false**.</returns>
    </member>
    <member name="M:Windows.Services.Cortana.CortanaSettings.GetDefault">
      <summary>Retrieves the Cortana settings for the current user.</summary>
      <returns>A CortanaSettings object.</returns>
    </member>
    <member name="M:Windows.Services.Cortana.CortanaSettings.IsSupported">
      <summary>Retrieves whether Cortana settings are supported.</summary>
      <returns>**true** if Cortana settings are supported. Otherwise, **false**.</returns>
    </member>
    <member name="T:Windows.System.AutoUpdateTimeZoneStatus">
      <summary>The status of the automatic time zone request.</summary>
    </member>
    <member name="F:Windows.System.AutoUpdateTimeZoneStatus.Attempted">
      <summary>Time zone detection attempted. </summary>
    </member>
    <member name="F:Windows.System.AutoUpdateTimeZoneStatus.Failed">
      <summary>The time zone could not be detected due to lack of hardware support, or catastrophic failure.</summary>
    </member>
    <member name="F:Windows.System.AutoUpdateTimeZoneStatus.TimedOut">
      <summary>Request timed out. </summary>
    </member>
    <member name="T:Windows.System.DateTimeSettings">
      <summary>Sets the system date and time.</summary>
    </member>
    <member name="M:Windows.System.DateTimeSettings.SetSystemDateTime(Windows.Foundation.DateTime)">
      <summary>Set the system date and time.</summary>
      <param name="utcDateTime">The date and time value (in coordinated universal time (UTC)) to set the system clock to.</param>
    </member>
    <member name="T:Windows.System.PowerState">
      <summary>Represents power states for fixed-purpose devices.</summary>
    </member>
    <member name="F:Windows.System.PowerState.ConnectedStandby">
      <summary>Represents the Connected Standby state.</summary>
    </member>
    <member name="F:Windows.System.PowerState.SleepS3">
      <summary>Represents the Sleep S3 state.</summary>
    </member>
    <member name="T:Windows.System.ProcessLauncher">
      <summary>Starts the specified process with associated arguments, if any.</summary>
    </member>
    <member name="M:Windows.System.ProcessLauncher.RunToCompletionAsync(System.String,System.String)">
      <summary>Launches a new process.</summary>
      <param name="fileName">The name of the process to launch.</param>
      <param name="args">Arguments for running the process.</param>
      <returns>When this method completes, it returns the results of the process.</returns>
    </member>
    <member name="M:Windows.System.ProcessLauncher.RunToCompletionAsync(System.String,System.String,Windows.System.ProcessLauncherOptions)">
      <summary>Launches a new process, including the specified options.</summary>
      <param name="fileName">File name of process to start.</param>
      <param name="args">Arguments for the specified process.</param>
      <param name="options">Associated options for running the process.</param>
      <returns>When this method completes, it returns the results of the process.</returns>
    </member>
    <member name="T:Windows.System.ProcessLauncherOptions">
      <summary>Specifies the options used to launch the specified process.</summary>
    </member>
    <member name="M:Windows.System.ProcessLauncherOptions.#ctor">
      <summary>Creates and initializes a new instance of the process launcher options object.</summary>
    </member>
    <member name="P:Windows.System.ProcessLauncherOptions.StandardError">
      <summary>Specifies where a standard error is directed to.</summary>
      <returns>The stream to direct standard errors to.</returns>
    </member>
    <member name="P:Windows.System.ProcessLauncherOptions.StandardInput">
      <summary>Specifies where a standard input is coming from.</summary>
      <returns>The input stream for standard input.</returns>
    </member>
    <member name="P:Windows.System.ProcessLauncherOptions.StandardOutput">
      <summary>Specifies where a standard output is directed to.</summary>
      <returns>The stream to which standard output is directed.</returns>
    </member>
    <member name="P:Windows.System.ProcessLauncherOptions.WorkingDirectory">
      <summary>Gets or sets the directory the process launcher will work in.</summary>
      <returns>The working directory.</returns>
    </member>
    <member name="T:Windows.System.ProcessLauncherResult">
      <summary>Represents the return of the launched process.</summary>
    </member>
    <member name="P:Windows.System.ProcessLauncherResult.ExitCode">
      <summary>Represents the exit code of the process that was run from ProcessLauncher.</summary>
      <returns>The exit code.</returns>
    </member>
    <member name="T:Windows.System.ShutdownKind">
      <summary>Describes the types of shutdown that you can perform for a device that runs in fixed-purpose mode.</summary>
    </member>
    <member name="F:Windows.System.ShutdownKind.Restart">
      <summary>Shuts down the fixed-purpose device, then restarts the device.</summary>
    </member>
    <member name="F:Windows.System.ShutdownKind.Shutdown">
      <summary>Shuts down the fixed-purpose device without restarting the device.</summary>
    </member>
    <member name="T:Windows.System.ShutdownManager">
      <summary>Manages the shutdown of devices that run in fixed-purpose mode.</summary>
    </member>
    <member name="M:Windows.System.ShutdownManager.BeginShutdown(Windows.System.ShutdownKind,Windows.Foundation.TimeSpan)">
      <summary>Shuts down a device that runs in fixed-purpose mode, and optionally restarts the device after the specified number of seconds.</summary>
      <param name="shutdownKind">The type of shutdown to perform, either with or without restarting the device.</param>
      <param name="timeout">The amount of time in seconds to wait before restarting the device if *shutdownKind* is **ShutdownKind.Restart**.</param>
    </member>
    <member name="M:Windows.System.ShutdownManager.CancelShutdown">
      <summary>Cancels a shutdown of a fixed-purpose device that is already in progress.</summary>
    </member>
    <member name="M:Windows.System.ShutdownManager.EnterPowerState(Windows.System.PowerState)">
      <summary>Instructs a fixed-purpose device to enter the given power state.</summary>
      <param name="powerState">The power state to enter.</param>
    </member>
    <member name="M:Windows.System.ShutdownManager.EnterPowerState(Windows.System.PowerState,Windows.Foundation.TimeSpan)">
      <summary>Instructs a fixed-purpose device to enter the given power state, then wake up after the given period of time.</summary>
      <param name="powerState">The power state to enter.</param>
      <param name="wakeUpAfter">The period of time to remain in the specified power state. After this time elapses, the device will wake up.</param>
    </member>
    <member name="M:Windows.System.ShutdownManager.IsPowerStateSupported(Windows.System.PowerState)">
      <summary>Gets whether a given power state is supported on a fixed-purpose device.</summary>
      <param name="powerState">The power state to be examined.</param>
      <returns>This method returns TRUE if the power state is supported on the specified device, and FALSE otherwise.</returns>
    </member>
    <member name="T:Windows.System.SystemManagementContract">
      <summary>
      </summary>
    </member>
    <member name="T:Windows.System.TimeZoneSettings">
      <summary>Contains methods and properties for interacting with time zones.</summary>
    </member>
    <member name="P:Windows.System.TimeZoneSettings.CanChangeTimeZone">
      <summary>Gets whether the time zone can be changed.</summary>
      <returns>True if the time zone can be changed; otherwise, false.</returns>
    </member>
    <member name="P:Windows.System.TimeZoneSettings.CurrentTimeZoneDisplayName">
      <summary>Gets the display name of the current time zone.</summary>
      <returns>The display name of the current time zone.</returns>
    </member>
    <member name="P:Windows.System.TimeZoneSettings.SupportedTimeZoneDisplayNames">
      <summary>Gets the display names for all supported time zones.</summary>
      <returns>The display names for all supported time zones.</returns>
    </member>
    <member name="M:Windows.System.TimeZoneSettings.AutoUpdateTimeZoneAsync(Windows.Foundation.TimeSpan)">
      <summary>Attempts to automatically determine and set the time zone for embedded mode devices.</summary>
      <param name="timeout">If the time-out period is exceeded, this method returns a value of **TimedOut** for the AutoUpdateTimeZoneStatus.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Windows.System.TimeZoneSettings.ChangeTimeZoneByDisplayName(System.String)">
      <summary>Changes the time zone using the display name.</summary>
      <param name="timeZoneDisplayName">The display name of the time zone to change to.</param>
    </member>
  </members>
</doc>